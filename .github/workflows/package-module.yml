name: Package Bearsampp Pricing Tables Module

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    # Allows manual triggering

jobs:
  build-package:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          
      - name: Get current date
        id: date
        run: |
          echo "BASE_VERSION=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
          echo "CREATION_DATE=$(date +'%Y %B %d')" >> $GITHUB_ENV
          echo "CURRENT_YEAR=$(date +'%Y')" >> $GITHUB_ENV
      
      - name: Check for existing tags and resolve version conflicts
        run: |
          # Get all existing tags
          git fetch --tags
          
          # Check if the base version tag already exists
          BASE_TAG="v${{ env.BASE_VERSION }}"
          if git rev-parse "$BASE_TAG" >/dev/null 2>&1; then
            echo "Tag $BASE_TAG already exists, finding next available version..."
            
            # Find all tags that match the pattern v{BASE_VERSION}.{n}
            MATCHING_TAGS=$(git tag -l "$BASE_TAG.*")
            
            if [ -z "$MATCHING_TAGS" ]; then
              # No sub-versions exist, use .1
              NEXT_VERSION="${{ env.BASE_VERSION }}.1"
            else
              # Find the highest sub-version
              HIGHEST_SUBVERSION=$(echo "$MATCHING_TAGS" | sed "s/^$BASE_TAG\.//" | sort -n | tail -1)
              NEXT_SUBVERSION=$((HIGHEST_SUBVERSION + 1))
              NEXT_VERSION="${{ env.BASE_VERSION }}.$NEXT_SUBVERSION"
            fi
            
            echo "VERSION=$NEXT_VERSION" >> $GITHUB_ENV
            echo "Using version: $NEXT_VERSION"
          else
            echo "VERSION=${{ env.BASE_VERSION }}" >> $GITHUB_ENV
            echo "Using base version: ${{ env.BASE_VERSION }}"
          fi
      
      - name: Create package directory
        run: mkdir -p package/mod_bearsampp_pricing_tables
      
      - name: Copy module files
        run: |
          cp mod_bearsampp_pricing_tables.php package/mod_bearsampp_pricing_tables/
          cp mod_bearsampp_pricing_tables.xml package/mod_bearsampp_pricing_tables/
          cp helper.php package/mod_bearsampp_pricing_tables/
          cp License.txt package/mod_bearsampp_pricing_tables/
          cp index.html package/mod_bearsampp_pricing_tables/
          cp -r css package/mod_bearsampp_pricing_tables/
          cp -r elements package/mod_bearsampp_pricing_tables/
          cp -r tmpl package/mod_bearsampp_pricing_tables/
          cp -r language package/mod_bearsampp_pricing_tables/
      
      - name: Update version in XML file
        run: |
          if [ -f "package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml" ]; then
            # Update version to YYYY.mm.dd[.n] format
            sed -i "s/<version>.*<\/version>/<version>${{ env.VERSION }}<\/version>/" package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml
            
            # Update creationDate to "YYYY Month DD" format
            sed -i "s/<creationDate>.*<\/creationDate>/<creationDate>${{ env.CREATION_DATE }}<\/creationDate>/" package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml
            
            # Update copyright year to current year in YYYY format
            sed -i "s/<copyright>Copyright (C)[0-9]\{4\} Bearsampp<\/copyright>/<copyright>Copyright (C)${{ env.CURRENT_YEAR }} Bearsampp<\/copyright>/" package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml
            
            echo "Updated version in XML file to ${{ env.VERSION }}"
            echo "Updated creationDate in XML file to ${{ env.CREATION_DATE }}"
            echo "Updated copyright year to ${{ env.CURRENT_YEAR }}"
            
            # Display the updated XML content
            echo "Updated XML content:"
            grep -A 1 -B 1 "<version>" package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml
            grep -A 1 -B 1 "<creationDate>" package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml
            grep -A 1 -B 1 "<copyright>" package/mod_bearsampp_pricing_tables/mod_bearsampp_pricing_tables.xml
          else
            echo "::warning::XML file not found, skipping version update"
          fi
      
      - name: Generate directory tree
        run: |
          apt-get update && apt-get install -y tree
          tree package/mod_bearsampp_pricing_tables > package/directory-structure.txt
      
      - name: Create ZIP archive
        run: |
          cd package
          zip -r mod_bearsampp_pricing_tables_${{ env.VERSION }}.zip mod_bearsampp_pricing_tables
          echo "Created ZIP archive: mod_bearsampp_pricing_tables_${{ env.VERSION }}.zip"
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Bearsampp Pricing Tables v${{ env.VERSION }}
          files: |
            package/mod_bearsampp_pricing_tables_${{ env.VERSION }}.zip
            package/directory-structure.txt
          draft: false
          prerelease: false
          body: |
            Bearsampp Pricing Tables Module v${{ env.VERSION }}
            
            ### Download Options:
            - Download directly from this release page
            - Access the artifact from the Actions tab of this workflow run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Upload artifact for easy access from GitHub Actions
      # Upload artifact for easy access from GitHub Actions
      - name: Upload to GitHub Artifacts
        id: upload_artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: mod_bearsampp_pricing_tables_${{ env.VERSION }}
          path: package/mod_bearsampp_pricing_tables_${{ env.VERSION }}.zip
          retention-days: 90
          if-no-files-found: error
      
      # Add information about downloading the artifact
      - name: Artifact Download Information
        run: |
          echo "::notice::The module package has been uploaded as an artifact."
          echo "::notice::You can download it from the Actions tab of this workflow run."
          echo "::notice::Go to Actions → This workflow → This run → Artifacts section → Download 'mod_bearsampp_pricing_tables_${{ env.VERSION }}'"
